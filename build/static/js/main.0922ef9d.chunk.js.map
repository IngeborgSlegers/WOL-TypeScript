{"version":3,"sources":["components/Auth/Login.tsx","components/Auth/Signup.tsx","components/Auth/Auth.tsx","components/Workouts/WorkoutCreate.tsx","components/Workouts/WorkoutTable.tsx","components/Workouts/WorkoutIndex.tsx","components/Home/Navbar.tsx","App.tsx","index.tsx"],"names":["Login","state","email","password","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","user","headers","Headers","then","response","json","data","props","updateToken","sessionToken","Form","onSubmit","this","FormGroup","Label","htmlFor","Input","onChange","type","required","Button","React","Signup","firstName","lastName","Auth","Container","className","Row","Col","md","WorkoutCreate","date","activity","duration","notes","console","log","token","res","fetchWorkouts","placeholder","WorkoutTable","convertDate","Date","workout","Card","CardBody","CardTitle","icon","faCalendarDay","Intl","DateTimeFormat","year","month","day","format","CardSubtitle","faRunning","CardText","faStopwatch","faStickyNote","WorkoutIndex","workouts","updateActive","workoutToUpdate","requestHeaders","logData","logs","editUpdateWorkout","updateToggle","length","map","key","id","Sitebar","isOpen","toggle","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","clearToken","App","localStorage","clear","alert","newToken","setItem","protectedViews","getItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0922ef9d.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n\ninterface Props {\n  updateToken?: any\n}\n\ninterface LoginState {\n  email: string;\n  password: string;\n}\n\nexport default class Login extends React.Component<Props, LoginState> {\n  state: LoginState = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault()\n    fetch('http://localhost:4000/user/signin', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: this.state.email,\n          password: this.state.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }).then(\n      (response) => response.json()\n    ).then((data) => {\n      this.props.updateToken(data.sessionToken)\n    })\n  }\n\n  render() {\n    return (\n      <Form\n        onSubmit={this.handleSubmit}\n      >\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            onChange={this.handleChange} value={this.state.email}\n            type=\"email\" name=\"email\" required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            onChange={this.handleChange} value={this.state.password}\n            name=\"password\" type=\"password\" />\n        </FormGroup>\n        <Button type=\"submit\">Login</Button>\n      </Form>\n    )\n  }\n}","import * as React from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\ninterface Props {\n  updateToken?: any;\n}\n\ninterface SignupState {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\nexport default class Signup extends React.Component<Props, SignupState> {\n  state: SignupState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) : void => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault()\n    fetch('http://localhost:4000/user/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }).then(\n      (response) => response.json()\n    ).then((data) => {\n      this.props.updateToken(data.sessionToken)\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"firstName\">First Name</Label>\n          <Input\n            onChange={this.handleChange} value={this.state.firstName}\n            name=\"firstName\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"lastName\">Last Name</Label>\n          <Input\n            onChange={this.handleChange} value={this.state.lastName}\n            name=\"lastName\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            onChange={this.handleChange} value={this.state.email}\n            type=\"email\" name=\"email\" required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            onChange={this.handleChange} value={this.state.password}\n            name=\"password\" type=\"password\" />\n        </FormGroup>\n        <Button type=\"submit\">Sign Up</Button>\n      </Form>\n    )\n  }\n}","import * as React from 'react';\nimport {Container, Row, Col} from 'reactstrap';\nimport Login from './Login';\nimport Signup from './Signup';\n\ntype Props = {\n  updateToken: any;\n};\n\nfunction Auth( {updateToken} : Props ) : any {\n  return(\n    <Container className=\"auth-container\">\n    <Row>\n      <Col md=\"6\">\n        <Signup \n          updateToken={updateToken} \n        />\n      </Col>\n      <Col md=\"6\">\n        <Login \n          updateToken={updateToken} \n        />\n      </Col>\n    </Row>\n  </Container>\n  );\n};\n\nexport default Auth;","import * as React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nexport interface WorkoutCreateProps {\n  token : string;\n  fetchWorkouts? : any;\n}\n\nexport interface WorkoutCreateState {\n  date: string;\n  activity: string;\n  duration: string;\n  notes: string;\n\n}\n\nclass WorkoutCreate extends React.Component<WorkoutCreateProps, WorkoutCreateState> {\n  state: WorkoutCreateState = {\n    date: ' ',\n    activity: ' ',\n    duration: ' ',\n    notes: ' '\n  }\n\n  handleSubmit = (event: React.FormEvent): void => {\n    console.log(event)\n    event.preventDefault();\n    fetch('http://localhost:4000/log', {\n      method: 'POST', \n      headers: new Headers({\n        'Content-Type': 'application/json', \n        'Authorization': this.props.token\n      }),\n      body: JSON.stringify({\n        log: {\n          date: this.state.date,\n          activity: this.state.activity,\n          duration: this.state.duration,\n          notes: this.state.notes,\n        }\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          date: ' ',\n          activity: ' ',\n          duration: ' ',\n          notes: ' '\n        });\n        this.props.fetchWorkouts();\n      })\n\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Log a Workout</h3>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"date\" />\n            <Input onChange={this.handleChange} type=\"date\" name=\"date\" value={this.state.date} />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"activity\" />\n            <Input onChange={this.handleChange} type=\"select\" name=\"activity\" value={this.state.activity}>\n              <option>Select an activity</option>\n              <option value=\"Gardening\">Gardening</option>\n              <option value=\"Horse Riding\">Horse Riding</option>\n              <option value=\"Swimming\">Swimming</option>\n              <option value=\"Walk\">Walk</option>\n              <option value=\"Yoga\">Yoga</option>\n              <option value=\"Other\">Other</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"duration\" />\n            <Input onChange={this.handleChange} type=\"text\" name=\"duration\" placeholder=\"Time spent in hours or min.\" value={this.state.duration} />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"notes\" />\n            <Input onChange={this.handleChange} type=\"textarea\" name=\"notes\" placeholder=\"Notes\" value={this.state.notes} />\n          </FormGroup>\n          <Button type=\"submit\">Click to Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default WorkoutCreate;","import * as React from 'react';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarDay, faRunning, faStickyNote, faStopwatch } from '@fortawesome/free-solid-svg-icons'\n\n\nexport interface WorkoutTableProps {\n  workout: any;\n}\n\nconst WorkoutTable: React.SFC<WorkoutTableProps> = (props) => {\n\n  let convertDate: Date = new Date(props.workout.date);\n\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>\n          <FontAwesomeIcon icon={faCalendarDay} />\n          {Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit'\n          }).format(convertDate)}\n        </CardTitle>\n        <CardSubtitle>\n          <FontAwesomeIcon icon={faRunning} />\n          {props.workout.activity}\n        </CardSubtitle>\n        <CardText>\n        <FontAwesomeIcon icon={faStopwatch} />\n          {props.workout.duration}\n        </CardText>\n        <CardText>\n        <FontAwesomeIcon icon={faStickyNote} />\n          {props.workout.notes}\n        </CardText>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default WorkoutTable;","import * as React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport WorkoutCreate from './WorkoutCreate';\nimport WorkoutTable from './WorkoutTable';\n\ninterface IWorkoutIndex {\n  workouts: Array<any>;\n  updateActive: boolean;\n  workoutToUpdate: Object;\n}\n\ninterface IProps {\n  token: string;\n}\n\nexport default class WorkoutIndex extends React.Component<IProps, IWorkoutIndex> {\n  state: IWorkoutIndex = {\n    workouts: [],\n    updateActive: false,\n    workoutToUpdate: {}\n  }\n\n  fetchWorkouts = (): void => {\n    let requestHeaders: any = {\n      'Content-Type': 'application/json',\n      'Authorization': this.props.token\n    }\n    fetch(`http://localhost:4000/log`, {\n      method: 'GET',\n      headers: requestHeaders\n    })\n      .then((res) => res.json())\n      .then((logData) => {\n        console.log(logData.logs);\n        this.setState({ workouts: logData.logs })\n      })\n  };\n\n  componentDidMount(): void {\n    this.fetchWorkouts();\n  }\n\n  editUpdateWorkout = (workout: any): void => {\n    console.log(workout);\n    this.setState({ workoutToUpdate: workout })\n  };\n\n  updateToggle = (): void => {\n    this.setState({ updateActive: !this.state.updateActive })\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col md=\"3\">\n            <WorkoutCreate fetchWorkouts={this.fetchWorkouts} token={this.props.token} />\n          </Col>\n          <Col md=\"9\">\n            {this.state.workouts.length > 0 ? \n                this.state.workouts.map(workout => {\n                  return <WorkoutTable key={workout.id} workout={workout} />\n                }) \n              : <h1>Please log an activity!</h1>\n            }\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}","import * as React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Button\n} from 'reactstrap';\n\ninterface NavProps {\n  clearToken: any;\n};\n\ninterface NavState {\n  isOpen: boolean;\n}\n\nexport default class Sitebar extends React.Component<NavProps, NavState> {\n  state: NavState = {\n    isOpen: false\n  }\n\n  toggle = (): void => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"faded\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Workout Log</NavbarBrand>\n        <NavbarToggler\n          onClick={this.toggle}\n        />\n        <Collapse\n          isOpen={this.state.isOpen}\n          navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <Button\n                onClick={this.props.clearToken}\n              >Logout</Button>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}","import * as React from 'react';\n\nimport Auth from './components/Auth/Auth';\nimport WorkoutIndex from './components/Workouts/WorkoutIndex';\nimport Sitebar from './components/Home/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n\ninterface SessionToken {\n  token: string;\n}\n\nexport class App extends React.Component<any, SessionToken> {\n  state: SessionToken = {\n    token: ' '\n  }\n\n  clearToken = (): void => {\n    localStorage.clear();\n    this.setState(\n      { token: ' ' }\n    );\n    alert(`You have successfully logged out!`)\n  }\n\n  updateToken = (newToken: string): void => {\n    localStorage.setItem('token', newToken);\n    this.setState({ token: newToken });\n  }\n\n  protectedViews = (): any => {\n    return (this.state.token === localStorage.getItem('token') ? <WorkoutIndex token={this.state.token} /> : <Auth updateToken={this.updateToken} />)\n  }\n\n  render() {\n    return (\n      <div>\n        <Sitebar clearToken={this.clearToken} />\n        {this.protectedViews()}\n        {/* <FontAwesomeIcon icon={faCoffee} /> */}\n      </div>\n    )\n  }\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />, document.getElementById(\"example\")\n);"],"sourceRoot":""}